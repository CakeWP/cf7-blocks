/**
 * WordPress Dependencies
 */
import { __, sprintf } from '@wordpress/i18n';
import { PanelBody, TextControl, ToggleControl } from '@wordpress/components';
import {
	InspectorControls,
	InspectorAdvancedControls,
} from '@wordpress/block-editor';

/**
 * Custom Dependencies
 */

import { convertAcceptanceBlockToCF7Shortcode } from '../utils/convert-to-cf7-shortcode';

function Inspector( props ) {
	const { id, name, isOptional, autogeneratedName } = props.attributes;

	return (
		<>
			<InspectorControls>
				<PanelBody title={ __( 'Generated Shortcode', 'cf7-blocks' ) }>
					<TextControl
						value={ convertAcceptanceBlockToCF7Shortcode(
							props.attributes
						) }
					/>
				</PanelBody>
				<PanelBody title={ __( 'General', 'cf7-blocks' ) }>
					<TextControl
						value={ name }
						label={ __( 'Name', 'cf7-blocks' ) }
						placeholder={ autogeneratedName }
						help={ __(
							'Assign a unique field name',
							'cf7-blocks'
						) }
						onChange={ ( newName ) => {
							const normalizedName = newName
								.toLowerCase()
								.replace( ' ', '-' );

							props.setAttributes( { name: normalizedName } );
						} }
					/>

					<ToggleControl
						checked={ isOptional }
						onChange={ ( newOptional ) =>
							props.setAttributes( {
								isOptional: newOptional,
							} )
						}
						label={ __( 'Optional', 'cf7-blocks' ) }
						help={ __(
							'Make this checkbox optional.',
							'cf7-blocks'
						) }
					/>
				</PanelBody>
			</InspectorControls>
			<InspectorAdvancedControls>
				<TextControl
					value={ id }
					label={ __( 'Unique Id', 'cf7-blocks' ) }
					help={ __( 'Add a unique id attribute.', 'cf7-blocks' ) }
					onChange={ ( newId ) => {
						const idWithoutSpace = newId.replace( ' ', '' );
						props.setAttributes( { id: idWithoutSpace } );
					} }
				/>
			</InspectorAdvancedControls>
		</>
	);
}

export default Inspector;

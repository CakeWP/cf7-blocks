/**
 * WordPress Dependencies
 */
import { isEmpty } from 'lodash';
import { __ } from '@wordpress/i18n';
import { useEffect } from '@wordpress/element';
import { RichText } from '@wordpress/block-editor';

/**
 * Custom Dependencies
 */
import generateFieldName from '../../utils/generate-name';

function PreviewMode( props ) {
	const {
		id,
		type,
		name,
		label,
		isLabelFirst,
		isRequired,
		isChecked,
		autogeneratedName,
	} = props.attributes;

	useEffect( () => {
		// Generating a new field name, if needed.
		if (
			isEmpty( autogeneratedName ) ||
			! autogeneratedName.startsWith( type )
		) {
			const newAutogeneratedName = generateFieldName( type );
			props.setAttributes( { autogeneratedName: newAutogeneratedName } );
		}
	}, [ type ] );
	return (
		<div class={ `cf7blocks-${ type }` }>
			{ isLabelFirst && (
				<RichText
					tagName="label"
					value={ label }
					placeholder={ __( 'Add Label', 'cf7-blocks' ) }
					onChange={ ( newLabel ) =>
						props.setAttributes( { label: newLabel } )
					}
				/>
			) }
			<input
				id={ id }
				type={ type }
				form="gutenberg"
				checked={ isChecked }
				name={ name }
				isRequired={ isRequired }
			/>
			{ ! isLabelFirst && (
				<RichText
					tagName="label"
					value={ label }
					placeholder={ __( 'Add Label', 'cf7-blocks' ) }
					onChange={ ( newLabel ) =>
						props.setAttributes( { label: newLabel } )
					}
				/>
			) }
		</div>
	);
}

export default PreviewMode;
